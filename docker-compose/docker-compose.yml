version: "3"
services:
  bitcoind:
    build:
      context: ./bitcoind
      args:
        UID: "${LPS_UID}"
    image: bitcond:latest
    container_name: bitcoind01
    ports:
      - "5555:5555"
    volumes:
      - ${BTCD_HOME:-/mnt/bitcoind}:/home/bitcoin/.bitcoin
    networks:
      - net_lps
    command:
      [
        "bitcoind",
        "-rpcuser=${BTC_USERNAME}",
        "-rpcpassword=${BTC_PASSWORD}",
        "-addresstype=legacy",
        "-${LPS_STAGE}",
        "-printtoconsole",
        "-server",
        "-txindex",
        "-deprecatedrpc=signrawtransaction",
        "-deprecatedrpc=accounts",
        "-rpcbind=0.0.0.0",
        "-rpcallowip=0.0.0.0/0",
        "-rpcport=5555",
      ]
  mongodb:
    image: mongo:4
    restart: on-failure
    container_name: mongo01
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
      - MONGO_INITDB_DATABASE=flyover
    ports:
      - 27017:27017
    volumes:
      - ${MONGO_HOME:-./volumes/mongo}/logs:/data/db
    expose:
      - 27017
    networks:
      - net_lps
  rskj:
    build:
      context: ./rskj
      args:
        UID: "${LPS_UID}"
    image: rskj:latest
    container_name: rskj01
    ports:
      - "4444:4444"
      - "4445:4445"
    volumes:
      - ${RSKJ_HOME:-./volumes/rskj}/db:/home/rsk/.rsk
      - ${RSKJ_HOME:-./volumes/rskj}/logs:/home/rsk/logs
    networks:
      - net_lps
    command:
      [
        "java",
        "-Drpc.providers.web.http.bind_address=0.0.0.0",
        "-Drpc.providers.web.http.hosts.0=localhost",
        "-Drpc.providers.web.http.hosts.1=rskj",
        "-cp",
        "rskj-core.jar",
        "-Drsk.conf.file=rsk.conf",
        "co.rsk.Start",
        "--${LPS_STAGE}",
      ]
  lps:
    build:
      context: ../
      dockerfile: docker-compose/lps/Dockerfile
      args:
        UID: "${LPS_UID}"
        COMMIT_HASH: "${COMMIT_HASH}"
        COMMIT_TAG: "${COMMIT_TAG}"
    image: lps:latest
    container_name: lps01
    environment:
      - LPS_STAGE
      - SERVER_PORT
      - LOG_LEVEL
      - LOG_FILE
      - ENABLE_MANAGEMENT_API
      - MONGODB_USER
      - MONGODB_PASSWORD
      - MONGODB_HOST
      - MONGODB_PORT
      - RSK_ENDPOINT
      - CHAIN_ID
      - LBC_ADDR
      - RSK_BRIDGE_ADDR
      - RSK_REQUIRED_BRIDGE_CONFIRMATIONS
      - ERP_KEYS
      - USE_SEGWIT_FEDERATION
      - USE_RETIRING_FEDERATION
      - ACCOUNT_NUM
      - DAO_FEE_COLLECTOR_ADDRESS
      - KEY_SECRET
      - PASSWORD_SECRET
      - BTC_NETWORK
      - BTC_USERNAME
      - BTC_PASSWORD
      - BTC_ENDPOINT
      - ALERT_SENDER_EMAIL
      - ALERT_RECIPIENT_EMAIL
      - PROVIDER_NAME
      - BASE_URL
      - PROVIDER_TYPE
      - PEGOUT_DEPOSIT_CACHE_START_BLOCK
      - CAPTCHA_SECRET_KEY
      - CAPTCHA_SITE_KEY
      - CAPTCHA_THRESHOLD
      - DISABLE_CAPTCHA
      - CAPTCHA_URL
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_REGION
      - AWS_LOCAL_ENDPOINT
      - MANAGEMENT_AUTH_KEY
      - MANAGEMENT_ENCRYPTION_KEY
      - MANAGEMENT_TOKEN_AUTH_KEY
      - MANAGEMENT_USE_HTTPS
      - ENABLE_SECURITY_HEADERS
      - WALLET
      - SECRET_SRC
      - KEYSTORE_FILE
      - KEYSTORE_PWD
      - BOOTSTRAP_TIMEOUT
      - WATCHER_PREPARATION_TIMEOUT
      - WATCHER_VALIDATION_TIMEOUT
      - DATABASE_INTERACTION_TIMEOUT
      - MINING_WAIT_TIMEOUT
      - DATABASE_CONNECTION_TIMEOUT
      - SERVER_READ_HEADER_TIMEOUT
      - SERVER_WRITE_TIMEOUT
      - SERVER_IDLE_TIMEOUT
      - PEGOUT_DEPOSIT_CHECK_TIMEOUT
      - RSK_EXTRA_SOURCES
      - BTC_EXTRA_SOURCES
      - ECLIPSE_CHECK_ENABLED
      - ECLIPSE_RSK_TOLERANCE_THRESHOLD
      - ECLIPSE_RSK_MAX_MS_WAIT_FOR_BLOCK
      - ECLIPSE_RSK_WAIT_POLLING_MS_INTERVAL
      - ECLIPSE_BTC_TOLERANCE_THRESHOLD
      - ECLIPSE_BTC_MAX_MS_WAIT_FOR_BLOCK
      - ECLIPSE_BTC_WAIT_POLLING_MS_INTERVAL
      - ECLIPSE_ALERT_COOLDOWN_SECONDS
      - BTC_RELEASE_WATCHER_START_BLOCK
      - BTC_RELEASE_WATCHER_PAGE_SIZE
      - BTC_RELEASE_CHECK_TIMEOUT
    ports:
      - "8080:8080"
    volumes:
      - /mnt/lps/db:/home/lps/db
      - /mnt/lps/logs:/home/lps/logs
    depends_on:
      - mongodb
      - bitcoind

    networks:
      - net_lps
    command: ["liquidity-provider-server"]

networks:
  net_lps:
    driver: "bridge"
