components:
  schemas:
    "": {}
    AcceptPeginRespose:
      properties:
        bitcoinDepositAddressHash:
          description: Hash of the deposit BTC address
          example: "0x0"
          type: string
        signature:
          description: Signature of the quote
          example: "0x0"
          type: string
      required:
      - signature
      - bitcoinDepositAddressHash
      type: object
    AcceptPegoutResponse:
      properties:
        lbcAddress:
          description: LBC address to execute depositPegout function
          example: "0x0"
          type: string
        signature:
          description: Signature of the quote
          example: "0x0"
          type: string
      required:
      - signature
      - lbcAddress
      type: object
    AcceptQuoteRequest:
      properties:
        quoteHash:
          description: QuoteHash
          example: "0x0"
          type: string
      required:
      - quoteHash
      type: object
    AddCollateralRequest:
      properties:
        amount:
          description: Amount to add to the collateral
          example: 100000000000
          type: integer
      required:
      - amount
      type: object
    AddCollateralResponse:
      properties:
        newCollateralBalance:
          description: New Collateral Balance
          example: 100000000000
          type: integer
      type: object
    AvailableLiquidityDTO:
      properties:
        peginLiquidityAmount:
          description: Available liquidity for PegIn operations in wei
          example: "5000000000000000000"
        pegoutLiquidityAmount:
          description: Available liquidity for PegOut operations in satoshi
          example: "500000000"
      required:
      - peginLiquidityAmount
      - pegoutLiquidityAmount
      type: object
    ChangeStatusRequest:
      properties:
        status:
          type: boolean
      type: object
    ConfirmationsPerAmount:
      properties:
        key:
          type: integer
      type: object
    DepositEventDTO:
      properties:
        amount:
          description: Event Value
          example: "10000"
        from:
          description: From Address
          example: "0x0"
          type: string
        quoteHash:
          description: QuoteHash
          example: "0x0"
          type: string
        timestamp:
          description: Event Timestamp
          example: "10000"
          format: date-time
          type: string
      type: object
    GeneralConfiguration:
      properties:
        btcConfirmations:
          $ref: '#/components/schemas/ConfirmationsPerAmount'
          type: object
        publicLiquidityCheck:
          type: boolean
        rskConfirmations:
          $ref: '#/components/schemas/ConfirmationsPerAmount'
          type: object
      type: object
    GeneralConfigurationRequest:
      properties:
        configuration:
          $ref: '#/components/schemas/GeneralConfiguration'
          type: object
      type: object
    GetCollateralResponse:
      properties:
        collateral:
          type: integer
      required:
      - collateral
      type: object
    GetPeginQuoteResponse:
      properties:
        quote:
          $ref: '#/components/schemas/PeginQuoteDTO'
          description: Detail of the quote
          type: object
        quoteHash:
          description: This is a 64 digit number that derives from a quote object
          type: string
      required:
      - quote
      - quoteHash
      type: object
    GetPegoutQuoteResponse:
      properties:
        quote:
          $ref: '#/components/schemas/PegoutQuoteDTO'
          description: Detail of the quote
          type: object
        quoteHash:
          description: This is a 64 digit number that derives from a quote object
          type: string
      required:
      - quote
      - quoteHash
      type: object
    HealthResponse:
      properties:
        services:
          description: LPS Services Status
          example:
            btc: ok
            db: ok
            rsk: ok
          type: object
        status:
          description: Overall LPS Health Status
          example: ok
          type: string
      required:
      - status
      - services
      type: object
    LiquidityProvider:
      properties:
        apiBaseUrl:
          description: API base URL
          example: https://api.example.com
          type: string
        id:
          description: Provider Id
          example: 1
          type: integer
        name:
          description: Provider Name
          example: New Provider
          type: string
        provider:
          description: Provider Address
          example: "0x0"
          type: string
        providerType:
          description: Provider type
          example: pegin
          type: string
        status:
          description: Provider status
          example: true
          type: boolean
      required:
      - id
      - provider
      - name
      - apiBaseUrl
      - status
      - providerType
      type: object
    PeginConfiguration:
      properties:
        callFee:
          $ref: '#/components/schemas/Wei'
        callTime:
          type: integer
        maxValue:
          $ref: '#/components/schemas/Wei'
        minValue:
          $ref: '#/components/schemas/Wei'
        penaltyFee:
          $ref: '#/components/schemas/Wei'
        timeForDeposit:
          type: integer
      type: object
    PeginConfigurationRequest:
      properties:
        configuration:
          $ref: '#/components/schemas/PeginConfiguration'
          type: object
      type: object
    PeginQuoteDTO:
      properties:
        agreementTimestamp:
          description: The timestamp of the agreement
          type: integer
        btcRefundAddr:
          description: A User BTC refund address
          type: string
        callFee:
          description: The fee charged by the LP
          type: integer
        callOnRegister:
          description: A boolean value indicating whether the callForUser can be called
            on registerPegIn
          type: boolean
        confirmations:
          description: The number of confirmations that the LP requires before making
            the call
          type: integer
        contractAddr:
          description: The destination address of the peg-in
          type: string
        data:
          description: The arguments to send in the call
          type: string
        fedBTCAddr:
          description: The BTC address of the PowPeg
          type: string
        gasFee:
          description: Fee to pay for the gas of every call done during the pegin
            (call on behalf of the user and call to the dao fee collector)
          type: integer
        gasLimit:
          description: The gas limit
          type: integer
        lbcAddr:
          description: The address of the LBC
          type: string
        lpBTCAddr:
          description: The BTC address of the LP
          type: string
        lpCallTime:
          description: The time (in seconds) that the LP has to perform the call on
            behalf of the user after the deposit achieves the number of confirmations
          type: integer
        lpRSKAddr:
          description: The RSK address of the LP
          type: string
        nonce:
          description: A nonce that uniquely identifies this quote
          type: integer
        penaltyFee:
          description: The penalty fee that the LP pays if it fails to deliver the
            service
          type: integer
        productFeeAmount:
          description: The DAO Fee amount
          type: integer
        rskRefundAddr:
          description: A User RSK refund address
          type: string
        timeForDeposit:
          description: The time (in seconds) that the user has to achieve one confirmation
            on the BTC deposit
          type: integer
        value:
          description: The value to transfer in the call
          type: integer
      required:
      - fedBTCAddr
      - lbcAddr
      - lpRSKAddr
      - btcRefundAddr
      - rskRefundAddr
      - lpBTCAddr
      - callFee
      - penaltyFee
      - contractAddr
      - data
      - gasLimit
      - nonce
      - value
      - agreementTimestamp
      - timeForDeposit
      - lpCallTime
      - confirmations
      - callOnRegister
      - gasFee
      - productFeeAmount
      type: object
    PeginQuoteRequest:
      properties:
        bitcoinRefundAddress:
          description: 'User Bitcoin refund address. Note: Must be a legacy address,
            segwit addresses are not accepted'
          example: "0x0"
          type: string
        callContractArguments:
          description: Contract data
          example: "0x0"
          type: string
        callEoaOrContractAddress:
          description: Contract address or EOA address
          example: "0x0"
          type: string
        rskRefundAddress:
          description: User RSK refund address
          example: "0x0"
          type: string
        valueToTransfer:
          description: Value to send in the call
          example: 0
          type: integer
      required:
      - callEoaOrContractAddress
      - callContractArguments
      - valueToTransfer
      - rskRefundAddress
      - bitcoinRefundAddress
      type: object
    PeginQuoteStatusDTO:
      properties:
        detail:
          $ref: '#/components/schemas/PeginQuoteDTO'
          description: Agreed specification of the quote
          type: object
        status:
          $ref: '#/components/schemas/RetainedPeginQuoteDTO'
          description: Current status of the quote
          type: object
      required:
      - detail
      - status
      type: object
    PegoutConfiguration:
      properties:
        bridgeTransactionMin:
          $ref: '#/components/schemas/Wei'
        callFee:
          $ref: '#/components/schemas/Wei'
        callTime:
          type: integer
        expireBlocks:
          type: integer
        maxValue:
          $ref: '#/components/schemas/Wei'
        minValue:
          $ref: '#/components/schemas/Wei'
        penaltyFee:
          $ref: '#/components/schemas/Wei'
        timeForDeposit:
          type: integer
      type: object
    PegoutConfigurationRequest:
      properties:
        configuration:
          $ref: '#/components/schemas/PegoutConfiguration'
          type: object
      type: object
    PegoutQuoteDTO:
      properties:
        agreementTimestamp:
          type: integer
        btcRefundAddress:
          type: string
        callFee:
          type: integer
        depositAddr:
          type: string
        depositConfirmations:
          type: integer
        depositDateLimit:
          type: integer
        expireBlocks:
          type: integer
        expireDate:
          type: integer
        gasFee:
          description: Fee to pay for the gas of every call done during the pegout
            (call on behalf of the user in Bitcoin network and call to the dao fee
            collector in Rootstock)
          type: integer
        lbcAddress:
          type: string
        liquidityProviderRskAddress:
          type: string
        lpBtcAddr:
          type: string
        nonce:
          type: integer
        penaltyFee:
          type: integer
        productFeeAmount:
          description: The DAO fee amount
          type: integer
        rskRefundAddress:
          type: string
        transferConfirmations:
          type: integer
        transferTime:
          type: integer
        value:
          type: integer
      required:
      - lbcAddress
      - liquidityProviderRskAddress
      - btcRefundAddress
      - rskRefundAddress
      - lpBtcAddr
      - callFee
      - penaltyFee
      - nonce
      - depositAddr
      - value
      - agreementTimestamp
      - depositDateLimit
      - depositConfirmations
      - transferConfirmations
      - transferTime
      - expireDate
      - expireBlocks
      - gasFee
      - productFeeAmount
      type: object
    PegoutQuoteRequest:
      properties:
        bitcoinRefundAddress:
          description: BitcoinRefundAddress
          example: "0x0"
          type: string
        rskRefundAddress:
          description: RskRefundAddress
          example: "0x0"
          type: string
        to:
          description: Bitcoin address that will receive the BTC amount
          type: string
        valueToTransfer:
          description: ValueToTransfer
          example: 10000000000000
          type: integer
      required:
      - to
      - valueToTransfer
      - rskRefundAddress
      - bitcoinRefundAddress
      type: object
    PegoutQuoteStatusDTO:
      properties:
        detail:
          $ref: '#/components/schemas/PegoutQuoteDTO'
          description: Agreed specification of the quote
          type: object
        status:
          $ref: '#/components/schemas/RetainedPegoutQuoteDTO'
          description: Current status of the quote
          type: object
      required:
      - detail
      - status
      type: object
    ProviderDetail:
      properties:
        fee:
          type: integer
        maxTransactionValue:
          type: integer
        minTransactionValue:
          type: integer
        requiredConfirmations:
          type: integer
      required:
      - fee
      - minTransactionValue
      - maxTransactionValue
      - requiredConfirmations
      type: object
    ProviderDetailResponse:
      properties:
        liquidityCheckEnabled:
          type: boolean
        pegin:
          $ref: '#/components/schemas/ProviderDetail'
          type: object
        pegout:
          $ref: '#/components/schemas/ProviderDetail'
          type: object
        siteKey:
          type: string
      required:
      - siteKey
      - liquidityCheckEnabled
      - pegin
      - pegout
      type: object
    RetainedPeginQuoteDTO:
      properties:
        callForUserTxHash:
          description: The hash of the RSK transaction to the address requested by
            the user
          type: string
        depositAddress:
          description: BTC derivation address where the user should send the BTC
          type: string
        quoteHash:
          description: 32-byte long hash of the quote that acts as a unique identifier
          type: string
        registerPeginTxHash:
          description: The hash of the RSK transaction where the LP gets his refund
            and fee
          type: string
        requiredLiquidity:
          $ref: '#/components/schemas/'
          description: RBTC liquidity that the LP locks to guarantee the service.
            It is different from the total amount that the user needs to pay.
        signature:
          description: Signature of the liquidity provider expressing commitment on
            the quote
          type: string
        state:
          description: |-
            Current state of the quote. Possible values are:
             - WaitingForDeposit
             - WaitingForDepositConfirmations
             - TimeForDepositElapsed
             - CallForUserSucceeded
             - CallForUserFailed
             - RegisterPegInSucceeded
             - RegisterPegInFailed
          type: string
        userBtcTxHash:
          description: The hash of the user's BTC transaction to the derivation address
          type: string
      required:
      - quoteHash
      - signature
      - depositAddress
      - requiredLiquidity
      - state
      - userBtcTxHash
      - callForUserTxHash
      - registerPeginTxHash
      type: object
    RetainedPegoutQuoteDTO:
      properties:
        bridgeRefundTxHash:
          description: The hash of the transaction from the LP to the bridge to convert
            the refunded RBTC into BTC
          type: string
        depositAddress:
          description: Address of the smart contract where the user should execute
            depositPegout function
          type: string
        lpBtcTxHash:
          description: The hash of the BTC transaction from the LP to the user
          type: string
        quoteHash:
          description: 32-byte long hash of the quote that acts as a unique identifier
          type: string
        refundPegoutTxHash:
          description: The hash of the transaction from the LP to the LBC where the
            LP got the refund in RBTC
          type: string
        requiredLiquidity:
          $ref: '#/components/schemas/'
          description: BTC liquidity that the LP locks to guarantee the service. It
            is different from the total amount that the user needs to pay.
        signature:
          description: Signature of the liquidity provider expressing commitment on
            the quote
          type: string
        state:
          description: |
            Current state of the quote. Possible values are:
             - WaitingForDeposit
             - WaitingForDepositConfirmations
             - TimeForDepositElapsed
             - SendPegoutSucceeded
             - SendPegoutFailed
             - RefundPegOutSucceeded
             - RefundPegOutFailed
             - BridgeTxSucceeded
             - BridgeTxFailed
          type: string
        userRskTxHash:
          description: The hash of the depositPegout transaction made by the user
          type: string
      required:
      - quoteHash
      - signature
      - depositAddress
      - requiredLiquidity
      - state
      - userRskTxHash
      - lpBtcTxHash
      - refundPegoutTxHash
      - bridgeRefundTxHash
      type: object
    Services:
      properties:
        btc:
          type: string
        db:
          type: string
        rsk:
          type: string
      type: object
    Wei: {}
    entities.Wei: {}
    pkg.AcceptQuoteRequest:
      properties:
        quoteHash:
          description: QuoteHash
          example: "0x0"
          type: string
      required:
      - quoteHash
      type: object
    pkg.AddCollateralRequest:
      properties:
        amount:
          description: Amount to add to the collateral
          example: 100000000000
          type: integer
      required:
      - amount
      type: object
    pkg.AddCollateralResponse:
      properties:
        newCollateralBalance:
          description: New Collateral Balance
          example: 100000000000
          type: integer
      type: object
    pkg.GetCollateralResponse:
      properties:
        collateral:
          type: integer
      required:
      - collateral
      type: object
info:
  title: Liquidity Provider Server
  version: 1.2.1
openapi: 3.0.0
paths:
  /configuration:
    get:
      description: ' Get all the configurations for the liquidity provider. Included
        in the management API.'
      responses:
        "200":
          description: ""
      summary: Get configurations
    post:
      description: ' Set general configurations of the server. Included in the management
        API.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneralConfigurationRequest'
        required: true
      responses:
        "204":
          description: ""
      summary: Set General Config
  /getProviders:
    get:
      description: ' Returns a list of providers.'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiquidityProvider'
          description: ""
      summary: Get Providers
  /health:
    get:
      description: ' Returns server health.'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
          description: ""
      summary: Health
  /management:
    get:
      description: ' Serves the static site for the Management UI'
      responses:
        "200":
          description: ""
      summary: Management Interface
  /management/credentials:
    post:
      description: ' Set new credentials to log into the Management API'
      responses:
        "200":
          description: ""
      summary: Set Login Credentials
  /management/login:
    post:
      description: ' Authenticate to start a Management API session'
      responses:
        "200":
          description: ""
      summary: Management Login
  /management/logout:
    post:
      description: ' Logout from the Management API session'
      responses:
        "204":
          description: ""
      summary: Management Logout
  /pegin/acceptQuote:
    post:
      description: ' Accepts Quote'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptQuoteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptPeginRespose'
          description: ""
      summary: Accept Quote
  /pegin/addCollateral:
    post:
      description: ' Adds PegIn Collateral'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCollateralRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCollateralResponse'
          description: ""
      summary: Add PegIn Collateral
  /pegin/collateral:
    get:
      description: ' Get PegIn Collateral'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCollateralResponse'
          description: ""
      summary: Get PegIn Collateral
  /pegin/configuration:
    post:
      description: ' Set the configuration for the Pegin service. Included in the
        management API.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeginConfigurationRequest'
        required: true
      responses:
        "204":
          description: ""
      summary: Set Pegin Config
  /pegin/getQuote:
    post:
      description: ' Gets Pegin Quote'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeginQuoteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPeginQuoteResponse'
          description: ""
      summary: Pegin GetQuote
  /pegin/status:
    get:
      description: ' Returns the status of an accepted pegin quote'
      parameters:
      - description: Hash of the quote
        in: query
        name: quoteHash
        required: true
        schema:
          description: Hash of the quote
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeginQuoteStatusDTO'
          description: Object containing the quote itself and its status
      summary: GetPeginStatus
  /pegout/acceptQuote:
    post:
      description: ' Accepts Quote Pegout'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptQuoteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptPegoutResponse'
          description: ""
      summary: Accept Quote Pegout
  /pegout/addCollateral:
    post:
      description: ' Adds PegOut Collateral'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCollateralRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCollateralResponse'
          description: ""
      summary: Add PegOut Collateral
  /pegout/collateral:
    get:
      description: ' Get PegOut Collateral'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCollateralResponse'
          description: ""
      summary: Get PegOut Collateral
  /pegout/configuration:
    post:
      description: ' Set the configuration for the Pegout service. Included in the
        management API.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PegoutConfigurationRequest'
        required: true
      responses:
        "204":
          description: ""
      summary: Set Pegout Config
  /pegout/getQuotes:
    post:
      description: ' Gets Pegout Quote'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PegoutQuoteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPegoutQuoteResponse'
          description: ""
      summary: Pegout GetQuote
  /pegout/status:
    get:
      description: ' Returns the status of an accepted pegout quote'
      parameters:
      - description: Hash of the quote
        in: query
        name: quoteHash
        required: true
        schema:
          description: Hash of the quote
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PegoutQuoteStatusDTO'
          description: Object containing the quote itself and its status
      summary: GetPegoutStatus
  /provider/changeStatus:
    post:
      description: ' Changes the status of the provider'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeStatusRequest'
        required: true
      responses:
        "204":
          description: ""
      summary: Change Provider Status
  /provider/resignation:
    post:
      description: ' Provider stops being a liquidity provider'
      responses:
        "204":
          description: ""
      summary: Provider resignation
  /providers/details:
    get:
      description: ' Returns the details of the provider that manages this instance
        of LPS'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderDetailResponse'
          description: Detail of the provider that manges this instance
      summary: Provider detail
  /providers/liquidity:
    get:
      description: ' Fetches the available liquidity for both PegIn and PegOut operations.'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableLiquidityDTO'
          description: ""
      summary: Fetch Available Liquidity
  /providers/withdrawCollateral:
    post:
      description: ' Withdraw PegIn collateral of a resigned LP'
      responses:
        "204":
          description: ""
      summary: Withdraw PegIn Collateral
  /userQuotes:
    get:
      description: ' Returns user quotes for address.'
      parameters:
      - description: User Quote Request Details
        in: query
        name: address
        required: true
        schema:
          description: User Quote Request Details
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositEventDTO'
          description: Successfully retrieved the user quotes
      summary: GetUserQuotes
servers:
- description: ' Testnet'
  url: https://lps.testnet.flyover.rif.technology
- description: ' Mainnet'
  url: https://lps.flyover.rif.technology
